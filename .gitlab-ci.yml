image: python:3.7-slim-buster

stages:
  - prepare
  - test
  - build
  - deploy

prepare:
  stage: prepare
  script:
    - sed -rne "s/^usiVersion\s*=\s*('[0-]+')/USIVER=\1/p" univention-support-info >.env
    - cat -n .env
    - [ -s .env ]
  artifacts:
    reports:
      dotenv: .env
    paths:
      - .env
      - univention-support-info

.pip:
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - venv/
  script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - . venv/bin/activate

test:
  stage: test
  extends: .pip
  script:
    - pip install flake8
    - flake8

run:
  stage: build
  extends: .pip
  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - TWINE_CERT=$KNUT_CA TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*

deploy:
  stage: deploy
  resource_group: prod
  tags:
    - omar
  variables:
    GIT_STRATEGY: none
    MIRROR: /var/univention/buildsystem2/mirror
    BASE: ftp/download/scripts
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: manual
      allow_failure: true
  dependencies:
    - prepare
  needs:
    - job: prepare
      artifacts: true
  script:
    - . .env
    - install -m 755 univention-support-info "$MIRROR/$BASE/versions/univention-support-info.${USIVER:?}"
    - ln -snf "versions/univention-support-info.${USIVER:?}" "$MIRROR/$BASE/univention-support-info"
    - sudo update_mirror.sh -v "$BASE"
  environment:
    name: production
    url: https://updates.software-univention.de/download/scripts/
